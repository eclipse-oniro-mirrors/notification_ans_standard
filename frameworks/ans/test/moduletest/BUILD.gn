# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/ans_standard/notification.gni")
import("//build/ohos.gni")
import("//build/test.gni")

module_output_path = "ans_standard/moduletest"

config("public_ans_config") {
  include_dirs = [
    "${core_path}/common/include",
    "//utils/native/base/include",
    "${services_path}/ans/include",
    "${core_path}/include",
  ]
}

ohos_moduletest("ans_fw_module_test") {
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${core_path}/include",
    "${interfaces_path}/ans/native/include",
    "${frameworks_path}/ans/core/common/include",
    "${frameworks_path}/ans/core/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//base/notification/ans_standard/services/ans/include",
    "//third_party/json/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/test/moduletest/mock/include",
    "//base/notification/ces_standard/interfaces/innerkits/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/wantagent/include",
    "${core_path}/common/include",
    "${core_path}/include",
    "${interfaces_path}/innerkits/ans/native/include",
    "${interfaces_path}/innerkits/wantAgent/include",
    "//utils/native/base/include",
    "//third_party/jsoncpp/include",
    "//base/notification/ans_standard/frameworks/ans/test/moduletest/mock/include",
  ]

  sources = [
    "ans_fw_module_test.cpp",
    "mock/blob.cpp",
    "mock/distributed_kv_data_manager.cpp",
    "mock/mock_bundle_manager.cpp",
    "mock/mock_bundle_mgr_proxy.cpp",
    "mock/mock_change_notification.cpp",
    "mock/mock_common_event_data.cpp",
    "mock/mock_common_event_manager.cpp",
    "mock/mock_ipc.cpp",
    "mock/mock_single_kv_store.cpp",
  ]

  configs = [ "//utils/native/base:utils_config" ]

  deps = [
    "${frameworks_path}/ans/core:ans_core",
    "${frameworks_path}/ans/native:ans_innerkits",
    "${frameworks_path}/wantagent:wantagent_innerkits",
    "${services_path}/ans:libans",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  defines = []
  if (distributed_notification_supported) {
    defines += [ "DISTRIBUTED_NOTIFICATION_SUPPORTED" ]
    deps += [ "${services_path}/distributed:libans_distributed" ]
  }

  external_deps = [
    "ability_runtime:app_manager",
    "ability_runtime:want",
    "appexecfwk_standard:appexecfwk_base",
    "appexecfwk_standard:appexecfwk_core",
    "appexecfwk_standard:libeventhandler",
    "ces_standard:cesfwk_innerkits",
    "distributeddatamgr:distributeddata_inner",
    "dmsfwk_standard:zuri",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_image_standard:image_native",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "notification"
  part_name = "ans_standard"
}

ohos_moduletest("ans_innerkits_module_publish_test") {
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${core_path}/include",
    "${interfaces_path}/ans/native/include",
    "${frameworks_path}/ans/core/common/include",
    "${frameworks_path}/ans/core/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//base/notification/ans_standard/services/ans/include",
    "//third_party/json/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/test/moduletest/mock/include",
    "//base/notification/ces_standard/interfaces/innerkits/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/wantagent/include",
    "${core_path}/common/include",
    "${core_path}/include",
    "${interfaces_path}/innerkits/ans/native/include",
    "${interfaces_path}/innerkits/wantAgent/include",
    "//utils/native/base/include",
    "//third_party/jsoncpp/include",
    "//base/notification/ans_standard/frameworks/ans/test/moduletest/mock/include",
  ]

  sources = [
    "ans_innerkits_module_publish_test.cpp",
    "mock/blob.cpp",
    "mock/distributed_kv_data_manager.cpp",
    "mock/mock_bundle_manager.cpp",
    "mock/mock_bundle_mgr_proxy.cpp",
    "mock/mock_change_notification.cpp",
    "mock/mock_common_event_data.cpp",
    "mock/mock_common_event_manager.cpp",
    "mock/mock_ipc.cpp",
    "mock/mock_single_kv_store.cpp",
  ]

  configs = [ "//utils/native/base:utils_config" ]

  ldflags = [ "-Wl,-rpath=/system/lib/module/multimedia/" ]

  deps = [
    "${frameworks_path}/ans/core:ans_core",
    "${frameworks_path}/ans/native:ans_innerkits",
    "${frameworks_path}/wantagent:wantagent_innerkits",
    "${services_path}/ans:libans",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  defines = []
  if (distributed_notification_supported) {
    defines += [ "DISTRIBUTED_NOTIFICATION_SUPPORTED" ]
    deps += [ "${services_path}/distributed:libans_distributed" ]
  }

  external_deps = [
    "ability_runtime:app_manager",
    "ability_runtime:base",
    "ability_runtime:want",
    "appexecfwk_standard:appexecfwk_base",
    "appexecfwk_standard:appexecfwk_core",
    "appexecfwk_standard:libeventhandler",
    "ces_standard:cesfwk_innerkits",
    "distributeddatamgr:distributeddata_inner",
    "dmsfwk_standard:zuri",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_image_standard:image_native",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "notification"
  part_name = "ans_standard"
}

ohos_moduletest("ans_innerkits_module_slot_test") {
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${core_path}/include",
    "${interfaces_path}/ans/native/include",
    "${frameworks_path}/ans/core/common/include",
    "${frameworks_path}/ans/core/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//base/notification/ans_standard/services/ans/include",
    "//third_party/json/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/test/moduletest/mock/include",
    "//base/notification/ces_standard/interfaces/innerkits/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/wantagent/include",
    "${core_path}/common/include",
    "${core_path}/include",
    "${interfaces_path}/innerkits/ans/native/include",
    "${interfaces_path}/innerkits/wantAgent/include",
    "//utils/native/base/include",
    "//third_party/jsoncpp/include",
    "//base/notification/ans_standard/frameworks/ans/test/moduletest/mock/include",
  ]

  sources = [
    "ans_innerkits_module_slot_test.cpp",
    "mock/blob.cpp",
    "mock/distributed_kv_data_manager.cpp",
    "mock/mock_bundle_manager.cpp",
    "mock/mock_bundle_mgr_proxy.cpp",
    "mock/mock_change_notification.cpp",
    "mock/mock_common_event_data.cpp",
    "mock/mock_common_event_manager.cpp",
    "mock/mock_ipc.cpp",
    "mock/mock_single_kv_store.cpp",
  ]

  configs = [ "//utils/native/base:utils_config" ]

  deps = [
    "${frameworks_path}/ans/core:ans_core",
    "${frameworks_path}/ans/native:ans_innerkits",
    "${frameworks_path}/wantagent:wantagent_innerkits",
    "${services_path}/ans:libans",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  defines = []
  if (distributed_notification_supported) {
    defines += [ "DISTRIBUTED_NOTIFICATION_SUPPORTED" ]
    deps += [ "${services_path}/distributed:libans_distributed" ]
  }

  external_deps = [
    "ability_runtime:app_manager",
    "ability_runtime:want",
    "appexecfwk_standard:appexecfwk_base",
    "appexecfwk_standard:appexecfwk_core",
    "appexecfwk_standard:libeventhandler",
    "ces_standard:cesfwk_innerkits",
    "distributeddatamgr:distributeddata_inner",
    "dmsfwk_standard:zuri",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_image_standard:image_native",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "notification"
  part_name = "ans_standard"
}

ohos_moduletest("ans_innerkits_module_setting_test") {
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "${core_path}/include",
    "${interfaces_path}/ans/native/include",
    "${frameworks_path}/ans/core/common/include",
    "${frameworks_path}/ans/core/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//base/notification/ans_standard/services/ans/include",
    "//third_party/json/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/test/moduletest/mock/include",
    "//base/notification/ces_standard/interfaces/innerkits/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/ans/native/include",
    "//base/notification/ans_standard/interfaces/innerkits/wantagent/include",
    "${core_path}/common/include",
    "${core_path}/include",
    "${interfaces_path}/innerkits/ans/native/include",
    "${interfaces_path}/innerkits/wantAgent/include",
    "//utils/native/base/include",
    "//third_party/jsoncpp/include",
    "//base/notification/ans_standard/frameworks/ans/test/moduletest/mock/include",
  ]

  sources = [
    "ans_innerkits_module_setting_test.cpp",
    "mock/blob.cpp",
    "mock/distributed_kv_data_manager.cpp",
    "mock/mock_bundle_manager.cpp",
    "mock/mock_bundle_mgr_proxy.cpp",
    "mock/mock_change_notification.cpp",
    "mock/mock_common_event_data.cpp",
    "mock/mock_common_event_manager.cpp",
    "mock/mock_ipc.cpp",
    "mock/mock_single_kv_store.cpp",
  ]

  configs = [ "//utils/native/base:utils_config" ]

  deps = [
    "${frameworks_path}/ans/core:ans_core",
    "${frameworks_path}/ans/native:ans_innerkits",
    "${frameworks_path}/wantagent:wantagent_innerkits",
    "${services_path}/ans:libans",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  defines = []
  if (distributed_notification_supported) {
    defines += [ "DISTRIBUTED_NOTIFICATION_SUPPORTED" ]
    deps += [ "${services_path}/distributed:libans_distributed" ]
  }

  external_deps = [
    "ability_runtime:app_manager",
    "ability_runtime:want",
    "appexecfwk_standard:appexecfwk_base",
    "appexecfwk_standard:appexecfwk_core",
    "appexecfwk_standard:libeventhandler",
    "ces_standard:cesfwk_innerkits",
    "distributeddatamgr:distributeddata_inner",
    "dmsfwk_standard:zuri",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_image_standard:image_native",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "notification"
  part_name = "ans_standard"
}

ohos_js_unittest("ReminderAgentTest") {
  module_out_path = module_output_path

  hap_profile = "./config.json"
  certificate_profile = "//test/developertest/signature/openharmony_sx.p7b"
}

group("moduletest") {
  testonly = true
  deps = []

  deps += [
    ":ReminderAgentTest",
    ":ans_fw_module_test",
    ":ans_innerkits_module_publish_test",
    ":ans_innerkits_module_setting_test",
    ":ans_innerkits_module_slot_test",
  ]
}
