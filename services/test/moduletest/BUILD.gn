# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/ans_standard/notification.gni")
import("//build/ohos.gni")
import("//build/test.gni")

module_output_path = "ans_standard/moduletest"

ohos_moduletest("ans_module_test") {
  module_out_path = module_output_path
  include_dirs = [
    "include",
    "//base/miscservices/time/interfaces/innerkits/include",
    "//foundation/appexecfwk/standard/libs/libeventhandler/src",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "${services_path}/ans/include",
    "${services_path}/test/moduletest/mock/include",
    "//base/account/os_account/interfaces/innerkits/osaccount/native/include",
    "//base/account/os_account/frameworks/common/database/include/",
    "//base/account/os_account/frameworks/common/account_error/include",
    "//base/account/os_account/frameworks/common/log/include",
    "//foundation/distributeddatamgr/distributeddatamgr/services/distributeddataservice/adapter/include/autils",
    "//foundation/distributeddatamgr/distributeddatamgr/frameworks/innerkitsimpl/distributeddatafwk/include",
    "//foundation/distributeddatamgr/distributeddatamgr/services/distributeddataservice/adapter/include/log",
    "//foundation/distributeddatamgr/distributeddatamgr/interfaces/innerkits/distributeddata/include",
    "//foundation/distributeddatamgr/distributeddatamgr/frameworks/innerkitsimpl/distributeddatafwk/src",
    "//foundation/distributeddatamgr/distributeddatamgr/services/distributeddataservice/adapter/include/dfx",
    "//developtools/bytrace_standard/interfaces/innerkits/native/include",
  ]

  sources = [
    "${services_path}/ans/src/advanced_notification_service.cpp",
    "${services_path}/ans/src/advanced_notification_service_ability.cpp",
    "${services_path}/ans/src/bundle_manager_helper.cpp",
    "${services_path}/ans/src/notification_preferences.cpp",
    "${services_path}/ans/src/notification_preferences_database.cpp",
    "${services_path}/ans/src/notification_preferences_info.cpp",
    "${services_path}/ans/src/notification_slot_filter.cpp",
    "${services_path}/ans/src/notification_subscriber_manager.cpp",
    "${services_path}/ans/src/permission_filter.cpp",
    "${services_path}/ans/src/reminder_data_manager.cpp",
    "${services_path}/ans/src/reminder_event_manager.cpp",
    "${services_path}/ans/src/reminder_timer_info.cpp",
    "${services_path}/ans/src/system_event_observer.cpp",
    "//foundation/distributeddatamgr/distributeddatamgr/frameworks/innerkitsimpl/distributeddatafwk/src/ikvstore_snapshot.cpp",
    "//foundation/distributeddatamgr/distributeddatamgr/services/distributeddataservice/adapter/autils/src/constant.cpp",
    "ans_module_test.cpp",
    "mock/blob.cpp",
    "mock/distributed_kv_data_manager.cpp",
    "mock/mock_bundle_manager.cpp",
    "mock/mock_bundle_mgr_proxy.cpp",
    "mock/mock_event_handler.cpp",
    "mock/mock_ipc.cpp",
    "mock/mock_single_kv_store.cpp",
  ]

  configs = [ "//utils/native/base:utils_config" ]

  deps = [
    "${core_path}:ans_core",
    "${frameworks_path}/ans/native:ans_innerkits",
    "${frameworks_path}/wantagent:wantagent_innerkits",
    "//base/account/os_account/frameworks/osaccount/native:os_account_innerkits",
    "//base/miscservices/time/services:time_service",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms",
    "//foundation/distributeddatamgr/distributeddatamgr/interfaces/innerkits/distributeddata:distributeddata_inner",
    "//foundation/distributedschedule/dmsfwk/services/dtbschedmgr:distributedschedsvr",
    "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "aafwk_standard:want",
    "appexecfwk_standard:appexecfwk_base",
    "appexecfwk_standard:appexecfwk_core",
    "appexecfwk_standard:libeventhandler",
    "ces_standard:cesfwk_innerkits",
    "dmsfwk_standard:zuri",
    "hitrace_native:libhitrace",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "multimedia_image_standard:image_native",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
  ]

  subsystem_name = "notification"
  part_name = "ans_standard"
}

group("moduletest") {
  testonly = true
  deps = []

  deps += [ ":ans_module_test" ]
}
